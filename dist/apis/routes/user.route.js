"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const user_controller_1 = __importDefault(require("../controllers/user.controller"));
const helpers_middleware_1 = __importDefault(require("../middlewares/helpers.middleware"));
const token_middleware_1 = __importDefault(require("../middlewares/token.middleware"));
const user_middleware_1 = __importDefault(require("../middlewares/user.middleware"));
const userRoutes = (0, express_1.Router)();
userRoutes.get("/my-voucher", token_middleware_1.default.verifyToken, user_controller_1.default.getMyVoucher);
userRoutes.get("/:id", helpers_middleware_1.default.idRule("id"), helpers_middleware_1.default.idValidator, token_middleware_1.default.verifyToken, user_controller_1.default.getSingleUser);
userRoutes.get("/", token_middleware_1.default.verifyTokenAndAdmin, user_middleware_1.default.getAllUserRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.getAllUser);
userRoutes.post("/", token_middleware_1.default.verifyTokenAndAdmin, user_middleware_1.default.addNewUserRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.addNewUser);
userRoutes.delete("/:id", helpers_middleware_1.default.idRule("id"), helpers_middleware_1.default.idValidator, token_middleware_1.default.verifyTokenAndAdmin, user_controller_1.default.deleteUser);
userRoutes.put("/me", token_middleware_1.default.verifyToken, user_middleware_1.default.updateMeRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.updateMe);
userRoutes.put("/change-password", token_middleware_1.default.verifyToken, user_middleware_1.default.changePasswordMeRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.changePasswordMe);
userRoutes.put("/credit-card", token_middleware_1.default.verifyToken, user_middleware_1.default.updateCreditCardRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.updateCreditCard);
userRoutes.put("/:id", helpers_middleware_1.default.idRule("id"), helpers_middleware_1.default.idValidator, token_middleware_1.default.verifyTokenAndAdmin, user_middleware_1.default.updateUserRules(), helpers_middleware_1.default.entityValidator, user_controller_1.default.updateUser);
exports.default = userRoutes;
