"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const product_controller_1 = __importDefault(require("../controllers/product.controller"));
const helpersMiddleware_1 = __importDefault(require("../middlewares/helpersMiddleware"));
const productMiddleware_1 = __importDefault(require("../middlewares/productMiddleware"));
const tokenMiddleware_1 = __importDefault(require("../middlewares/tokenMiddleware"));
const productRoutes = (0, express_1.Router)();
productRoutes.get("/", productMiddleware_1.default.getProductsRules(), helpersMiddleware_1.default.entityValidator, product_controller_1.default.getAllProduct);
productRoutes.get("/:id", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, product_controller_1.default.getSingleProduct);
productRoutes.post("/", productMiddleware_1.default.addProductRules(), helpersMiddleware_1.default.entityValidator, tokenMiddleware_1.default.verifyTokenAndAdmin, product_controller_1.default.addNewProduct);
productRoutes.delete("/:id", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, tokenMiddleware_1.default.verifyTokenAndAdmin, product_controller_1.default.deleteProduct);
productRoutes.put("/:id", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, productMiddleware_1.default.updateProductRules(), helpersMiddleware_1.default.entityValidator, tokenMiddleware_1.default.verifyTokenAndAdmin, product_controller_1.default.updateProduct);
productRoutes.post("/:id/review", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, productMiddleware_1.default.addNewReviewRules(), helpersMiddleware_1.default.entityValidator, tokenMiddleware_1.default.verifyToken, product_controller_1.default.addNewReview);
productRoutes.delete("/:id/review", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, tokenMiddleware_1.default.verifyToken, product_controller_1.default.deleteReview);
productRoutes.put("/:id/review", helpersMiddleware_1.default.idRule("id"), helpersMiddleware_1.default.idValidator, productMiddleware_1.default.updateReviewRules(), helpersMiddleware_1.default.entityValidator, tokenMiddleware_1.default.verifyToken, product_controller_1.default.updateReview);
exports.default = productRoutes;
